package com.rick.fleetioassignment.model


import com.google.gson.annotations.SerializedName

data class VehicleResponseItem(
    @SerializedName("account_id") val accountId: Int = 0,
    @SerializedName("ai_enabled") val aiEnabled: Boolean = false,
    @SerializedName("archived_at") val archivedAt: Any? = Any(),
    @SerializedName("color") val color: String = "",
    @SerializedName("comments_count") val commentsCount: Int = 0,
    @SerializedName("created_at") val createdAt: String = "",
    @SerializedName("current_location_entry_id") val currentLocationEntryId: Any? = Any(),
    @SerializedName("current_meter_date") val currentMeterDate: String = "",
    @SerializedName("current_meter_value") val currentMeterValue: Double = 0.0,
    @SerializedName("custom_fields") val customFields: CustomFields = CustomFields(),
    @SerializedName("default_image_url") val defaultImageUrl: String = "",
    @SerializedName("default_image_url_large") val defaultImageUrlLarge: String = "",
    @SerializedName("default_image_url_medium") val defaultImageUrlMedium: String = "",
    @SerializedName("default_image_url_small") val defaultImageUrlSmall: String = "",
    @SerializedName("documents_count") val documentsCount: Int = 0,
    @SerializedName("driver") val driver: Driver = Driver(),
    @SerializedName("estimated_replacement_mileage") val estimatedReplacementMileage: Any? = Any(),
    @SerializedName("estimated_resale_price") val estimatedResalePrice: Any? = Any(),
    @SerializedName("estimated_service_months") val estimatedServiceMonths: Any? = Any(),
    @SerializedName("external_ids") val externalIds: ExternalIds = ExternalIds(),
    @SerializedName("fuel_entries_count") val fuelEntriesCount: Int = 0,
    @SerializedName("fuel_type_id") val fuelTypeId: Int = 0,
    @SerializedName("fuel_type_name") val fuelTypeName: String = "",
    @SerializedName("fuel_volume_units") val fuelVolumeUnits: String = "",
    @SerializedName("group_ancestry") val groupAncestry: String = "",
    @SerializedName("group_id") val groupId: Int = 0,
    @SerializedName("group_name") val groupName: String = "",
    @SerializedName("id") val id: Int = 0,
    @SerializedName("images_count") val imagesCount: Int = 0,
    @SerializedName("in_service_date") val inServiceDate: String = "",
    @SerializedName("in_service_meter") val inServiceMeter: Double = 0.0,
    @SerializedName("inspection_schedules_count") val inspectionSchedulesCount: Int = 0,
    @SerializedName("is_sample") val isSample: Boolean = false,
    @SerializedName("issues_count") val issuesCount: Int = 0,
    @SerializedName("license_plate") val licensePlate: String = "",
    @SerializedName("loan_account_number") val loanAccountNumber: Any? = Any(),
    @SerializedName("loan_ended_at") val loanEndedAt: Any? = Any(),
    @SerializedName("loan_interest_rate") val loanInterestRate: Any? = Any(),
    @SerializedName("loan_notes") val loanNotes: Any? = Any(),
    @SerializedName("loan_started_at") val loanStartedAt: Any? = Any(),
    @SerializedName("loan_vendor_id") val loanVendorId: Any? = Any(),
    @SerializedName("loan_vendor_name") val loanVendorName: Any? = Any(),
    @SerializedName("make") val make: String = "",
    @SerializedName("meter_name") val meterName: String = "",
    @SerializedName("meter_unit") val meterUnit: String = "",
    @SerializedName("model") val model: String = "",
    @SerializedName("name") val name: String = "",
    @SerializedName("out_of_service_date") val outOfServiceDate: Any? = Any(),
    @SerializedName("out_of_service_meter") val outOfServiceMeter: Any? = Any(),
    @SerializedName("ownership") val ownership: String = "",
    @SerializedName("primary_meter_usage_per_day") val primaryMeterUsagePerDay: String = "",
    @SerializedName("registration_expiration_month") val registrationExpirationMonth: Int = 0,
    @SerializedName("registration_state") val registrationState: String = "",
    @SerializedName("secondary_meter") val secondaryMeter: Boolean = false,
    @SerializedName("secondary_meter_date") val secondaryMeterDate: Any? = Any(),
    @SerializedName("secondary_meter_name") val secondaryMeterName: String = "",
    @SerializedName("secondary_meter_unit") val secondaryMeterUnit: Any? = Any(),
    @SerializedName("secondary_meter_usage_per_day") val secondaryMeterUsagePerDay: String = "",
    @SerializedName("secondary_meter_value") val secondaryMeterValue: Double = 0.0,
    @SerializedName("service_entries_count") val serviceEntriesCount: Int = 0,
    @SerializedName("service_reminders_count") val serviceRemindersCount: Int = 0,
    @SerializedName("specs") val specs: Specs = Specs(),
    @SerializedName("system_of_measurement") val systemOfMeasurement: String = "",
    @SerializedName("trim") val trim: String = "",
    @SerializedName("type_name") val typeName: String = "",
    @SerializedName("updated_at") val updatedAt: String = "",
    @SerializedName("vehicle_renewal_reminders_count") val vehicleRenewalRemindersCount: Int = 0,
    @SerializedName("vehicle_status_color") val vehicleStatusColor: String = "",
    @SerializedName("vehicle_status_id") val vehicleStatusId: Int = 0,
    @SerializedName("vehicle_status_name") val vehicleStatusName: String = "",
    @SerializedName("vehicle_type_id") val vehicleTypeId: Int = 0,
    @SerializedName("vehicle_type_name") val vehicleTypeName: String = "",
    @SerializedName("vin") val vin: String = "",
    @SerializedName("work_orders_count") val workOrdersCount: Int = 0,
    @SerializedName("year") val year: Int = 0
) {
    fun toDomainData(): Vehicle = Vehicle(id, name, make, model, vin, defaultImageUrl)
}